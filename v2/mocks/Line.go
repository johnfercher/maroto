// Code generated by mockery v2.33.3. DO NOT EDIT.

package mocks

import (
	internal "github.com/johnfercher/maroto/v2/internal"
	mock "github.com/stretchr/testify/mock"

	props "github.com/johnfercher/maroto/v2/maroto/props"
)

// Line is an autogenerated mock type for the Line type
type Line struct {
	mock.Mock
}

type Line_Expecter struct {
	mock *mock.Mock
}

func (_m *Line) EXPECT() *Line_Expecter {
	return &Line_Expecter{mock: &_m.Mock}
}

// Draw provides a mock function with given fields: cell, lineProp
func (_m *Line) Draw(cell internal.Cell, lineProp props.Line) {
	_m.Called(cell, lineProp)
}

// Line_Draw_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Draw'
type Line_Draw_Call struct {
	*mock.Call
}

// Draw is a helper method to define mock.On call
//   - cell internal.Cell
//   - lineProp props.Line
func (_e *Line_Expecter) Draw(cell interface{}, lineProp interface{}) *Line_Draw_Call {
	return &Line_Draw_Call{Call: _e.mock.On("Draw", cell, lineProp)}
}

func (_c *Line_Draw_Call) Run(run func(cell internal.Cell, lineProp props.Line)) *Line_Draw_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(internal.Cell), args[1].(props.Line))
	})
	return _c
}

func (_c *Line_Draw_Call) Return() *Line_Draw_Call {
	_c.Call.Return()
	return _c
}

func (_c *Line_Draw_Call) RunAndReturn(run func(internal.Cell, props.Line)) *Line_Draw_Call {
	_c.Call.Return(run)
	return _c
}

// NewLine creates a new instance of Line. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLine(t interface {
	mock.TestingT
	Cleanup(func())
}) *Line {
	mock := &Line{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
